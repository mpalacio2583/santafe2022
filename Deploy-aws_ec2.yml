# Basic provisioning example
- name: Create AWS resources
  hosts: localhost
  connection: local
  gather_facts: False  
  vars:
#    key_name: "{{ key_name_var }}"
#    instance_type: "{{ instance_type_var }}"
#    firewall_group_name: "{{ firewall_group_name_var }}"
    key_name: "{{ keys_name }}"
    instance_type: t2.micro
    firewall_group_name: "{{ security_group }}"
#    firewall_group_id: sg-03d829ffb469c64d9
    ami_id: "{{ id_ami }}"    #verificar que este ID exista en la zona de disponibilidad 
#    ami_id: ami-00cbb7bf4617ee51d    #verificar que este ID exista en la zona de disponibilidad 
    aws_region: us-east-1
    vpc_ids: vpc-0baf047ecfc61b714
#    cidr_ips: 172.31.0.0
#    aws_access_key: "{{ aws_access_keys }}"
#    aws_secret_key: "{{ aws_secret_keys }}"
    ec2_name: "{{ name_ec2 }}"
    
  tasks:
  - name: Create security group
    ec2_group:
      name: "{{ firewall_group_name }}"
      description: "A Security group"
      region: "{{aws_region}}"
      vpc_id: "{{vpc_ids}}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
    register: basic_firewall

  - name: create an EC2 instance
    ec2:
      instance_tags:
        Name: "{{ ec2_name }}"
      key_name: "{{key_name}}"
      region: "{{aws_region}}"
      group_id: "{{basic_firewall.group_id}}"
      instance_type: "{{instance_type}}"
      image: "{{ami_id}}"
      vpc_subnet_id: subnet-07de6f177caea80fd
      assign_public_ip: yes
      wait: yes
    register: basic_ec2
    
  - name: Dump public IP for VM which will be created
    debug:
      msg: "The public IP is {{ basic_ec2}}."
#      msg: "The public IP is {{ basic_ec2.public_ip }}"
